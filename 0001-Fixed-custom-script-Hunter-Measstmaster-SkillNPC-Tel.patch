From 40279fc777f0320fc49af420e91e2fec42b7a1d9 Mon Sep 17 00:00:00 2001
From: Shoxxo <Shoxxo@exploit.im>
Date: Wed, 11 Nov 2015 13:50:21 +0100
Subject: [PATCH] Fixed custom script ( Hunter Measstmaster / SkillNPC /
 Teleporter / etc... )

---
 src/scripts/CustomScripts/Aldor-Skyr-guards.cpp |    2 +-
 src/scripts/CustomScripts/HunterTrainer.cpp     |   17 +-
 src/scripts/CustomScripts/Setup.cpp             |    3 +-
 src/scripts/CustomScripts/Setup.h               |    2 +
 src/scripts/CustomScripts/Skillnpc.cpp          | 1114 ++++++++++++-----------
 5 files changed, 596 insertions(+), 542 deletions(-)
 rewrite src/scripts/CustomScripts/Skillnpc.cpp (78%)

diff --git a/src/scripts/CustomScripts/Aldor-Skyr-guards.cpp b/src/scripts/CustomScripts/Aldor-Skyr-guards.cpp
index 74e8a85..e43070c 100644
--- a/src/scripts/CustomScripts/Aldor-Skyr-guards.cpp
+++ b/src/scripts/CustomScripts/Aldor-Skyr-guards.cpp
@@ -1,7 +1,7 @@
 #include "StdAfx.h"
 #include "Setup.h"
 
-#define SPELL_BANISH	36642
+#define SPELL_BANISH    36642
 #define SPELL_EXILE		39533
 
 class AldorSkyrGuard : public CreatureAIScript
diff --git a/src/scripts/CustomScripts/HunterTrainer.cpp b/src/scripts/CustomScripts/HunterTrainer.cpp
index 028ece9..f19e27b 100644
--- a/src/scripts/CustomScripts/HunterTrainer.cpp
+++ b/src/scripts/CustomScripts/HunterTrainer.cpp
@@ -2,7 +2,7 @@
 #include "Setup.h"
 
 #define SendQuickMenu(textid) objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), textid, Plr); \
-    Menu->SendTo(Plr);
+	Menu->SendTo(Plr);
 
 void SpawnPet(Player * pPlayer, uint32 petId)
 {
@@ -24,9 +24,10 @@ void SpawnPet(Player * pPlayer, uint32 petId)
 		sp->flags = 0;
 		sp->form = 0;
 		sp->movetype = 0;
-		sp->o = pPlayer->GetOrientation();
 		sp->x = pPlayer->GetPositionX();
 		sp->y = pPlayer->GetPositionY();
+		sp->z = pPlayer->GetPositionZ();
+		sp->o = pPlayer->GetOrientation();
 		sp->channel_spell=sp->channel_target_creature=sp->channel_target_go=0;
 		pCreature->Load(sp, (uint32)NULL, NULL);
 		Pet *old_pet = pPlayer->GetSummon();
@@ -87,7 +88,7 @@ public:
 				Menu->AddItem(0, "I would like a Blackwind Warp Chaser.", 16);
 				Menu->SendTo(Plr);
 				return;
-				break;
+			break;
 		}
 
 		uint32 id = IntId - 10;
@@ -97,19 +98,19 @@ public:
 		SendQuickMenu(200017);
 	}
 
-     void GossipEnd(Object * pObject, Player* Plr)
+    void GossipEnd(Object * pObject, Player* Plr)
 	{
 		GossipScript::GossipEnd(pObject, Plr);
 	}
 
-     void Destroy()
-     {
+	void Destroy()
+    {
 		delete this;
-     }
+    }
 };
 
 void SetupHunterTrainer(ScriptMgr * mgr)
 {
 	GossipScript * ht = (GossipScript*)new HunterTrainer;
-	mgr->register_gossip_script(200016, ht);
+	mgr->register_gossip_script(135790, ht);
 }
\ No newline at end of file
diff --git a/src/scripts/CustomScripts/Setup.cpp b/src/scripts/CustomScripts/Setup.cpp
index 11c270d..e148ac9 100644
--- a/src/scripts/CustomScripts/Setup.cpp
+++ b/src/scripts/CustomScripts/Setup.cpp
@@ -31,7 +31,8 @@ extern "C" SCRIPT_DECL void _exp_script_register(ScriptMgr* mgr)
     SetupGMAnnounce(mgr);
 	SetupAldorSkyrGuard(mgr);
 	SetupTeleNPC(mgr);
-
+	SetupHunterTrainer(mgr);
+	SetupSkillNPC(mgr);
 }
 
 #ifdef WIN32
diff --git a/src/scripts/CustomScripts/Setup.h b/src/scripts/CustomScripts/Setup.h
index fcb491f..cdb3715 100644
--- a/src/scripts/CustomScripts/Setup.h
+++ b/src/scripts/CustomScripts/Setup.h
@@ -24,5 +24,7 @@
 void SetupGMAnnounce(ScriptMgr * mgr);
 void SetupAldorSkyrGuard(ScriptMgr * mgr);
 void SetupTeleNPC(ScriptMgr * mgr);
+void SetupHunterTrainer(ScriptMgr * mgr);
+void SetupSkillNPC(ScriptMgr * mgr);
 
 #endif
diff --git a/src/scripts/CustomScripts/Skillnpc.cpp b/src/scripts/CustomScripts/Skillnpc.cpp
dissimilarity index 78%
index 8dfd28e..a22b886 100644
--- a/src/scripts/CustomScripts/Skillnpc.cpp
+++ b/src/scripts/CustomScripts/Skillnpc.cpp
@@ -1,532 +1,582 @@
-#include "StdAfx.h"
-#include "Setup.h"
-
-#ifdef WIN32
-#pragma warning(disable:4305)// warning C4305: 'argument' : truncation from 'double' to 'float'
-#endif
-
-
-class SCRIPT_DECL SkillNPC : public GossipScript
-{
-public:
-    void GossipHello(Object * pObject, Player* Plr, bool AutoSend);
-    void GossipSelectOption(Object * pObject, Player* Plr, uint32 Id, uint32 IntId, const char * Code);
-    void GossipEnd(Object * pObject, Player* Plr);
-	void Destroy()
-	{
-		delete this;
-	}
-};
-void SkillNPC::GossipHello(Object * pObject, Player* Plr, bool AutoSend)
-	{
-        GossipMenu *Menu;
-        objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
-		       
-				if(!Plr->CombatStatus.IsInCombat())
-					{
-						Menu->AddItem(9, "Advance my weapon skills!", 1);
-						Menu->AddItem(5, "Goodbye!", 5);
-					}
-					else
-						Plr->BroadcastMessage("You are in combat!");
-					
-					    if(AutoSend)
-							Menu->SendTo(Plr);
-					};
-
-
-void SkillNPC::GossipSelectOption(Object * pObject, Player* Plr, uint32 Id, uint32 IntId, const char * Code)
-    {
-	Creature * pCreature = (pObject->GetTypeId()==TYPEID_UNIT)?((Creature*)pObject):NULL;
-	if(pCreature==NULL)
-		return;
-
-        switch(IntId)
-        {
-        case 0:
-		GossipHello(pObject, Plr, true);
-        break;
-
-		case 5:
-		{
-		Plr->Gossip_Complete();//Ends Conversation
-		}
-		break;
-
-		case 1:
-		{
-		if (Plr->_HasSkillLine(43))
-			{Plr->_AdvanceSkillLine(43, 400);}//Swords
-
-		if (Plr->_HasSkillLine(44))
-			{Plr->_AdvanceSkillLine(44, 400);}//Axes
-
-		if (Plr->_HasSkillLine(45))
-			{Plr->_AdvanceSkillLine(45, 400);}//Bows
-
-		if (Plr->_HasSkillLine(46))
-			{Plr->_AdvanceSkillLine(46, 400);}//Guns
-
-		if (Plr->_HasSkillLine(54))
-			{Plr->_AdvanceSkillLine(54, 400);}//Maces
-
-		if (Plr->_HasSkillLine(95))
-			{Plr->_AdvanceSkillLine(95, 400);}//Defense
-
-		if (Plr->_HasSkillLine(136))
-			{Plr->_AdvanceSkillLine(136, 400);}//Staves
-
-		if (Plr->_HasSkillLine(160))
-			{Plr->_AdvanceSkillLine(160, 400);}//Two-Handed Swords
-
-		if (Plr->_HasSkillLine(162))
-			{Plr->_AdvanceSkillLine(162, 400);}//Unarmed
-
-		if (Plr->_HasSkillLine(172))
-			{Plr->_AdvanceSkillLine(172, 400);}//Two-Handed Axes
-
-		if (Plr->_HasSkillLine(173))
-			{Plr->_AdvanceSkillLine(173, 400);}//Daggers
-
-		if (Plr->_HasSkillLine(176))
-			{Plr->_AdvanceSkillLine(176, 400);}//Thrown
-
-		if (Plr->_HasSkillLine(226))
-			{Plr->_AdvanceSkillLine(226, 400);}//Crossbows
-
-		if (Plr->_HasSkillLine(228))
-			{Plr->_AdvanceSkillLine(228, 400);}//Wands
-
-		if (Plr->_HasSkillLine(229))
-			{Plr->_AdvanceSkillLine(229, 400);}//Polearms
-
-		if (Plr->_HasSkillLine(473))
-			{Plr->_AdvanceSkillLine(473, 400);}//Fist Weapons - I am not sure if this is a skill that is like the others, I thought fist weapons contributed towards unarmed.
-			
-		if (Plr->_HasSkillLine(633))
-			{Plr->_AdvanceSkillLine(633, 400);}//Lockpicking - I know its not a weapon skill, but it's always a bitch to level.
-
-			Plr->BroadcastMessage("You weapon skills have been advanced!");
-			Plr->Gossip_Complete();
-			}
- }
- }
-
-void SkillNPC::GossipEnd(Object * pObject, Player* Plr)
-{
-    GossipScript::GossipEnd(pObject, Plr);
-}
-
-class SCRIPT_DECL BuffNPC : public GossipScript
-{
-public:
-    void GossipHello(Object * pObject, Player* Plr, bool AutoSend)
-    { 
-        GossipMenu *Menu;
-        objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
-		       
-        if(!Plr->CombatStatus.IsInCombat())
-		{
-	        Menu->AddItem(0, "Master Magic buff!", 1);
-	        Menu->AddItem(0, "Master Melee buff!", 2);
-            Menu->AddItem(0, "Master Ranged buff!", 3);
-	    }
-	    else
-            Plr->BroadcastMessage("You are in combat!");
-					
-	    if(AutoSend)
-	        Menu->SendTo(Plr);
-    };
-
-    void GossipSelectOption(Object * pObject, Player* Plr, uint32 Id, uint32 IntId, const char * Code)
-    {
-        switch( IntId )
-        {
-        case 1:
-            Plr->CastSpell( Plr, 35912, true );
-            break;
-        case 2:
-            Plr->CastSpell( Plr, 35874, true );
-            break;
-        case 3:
-            Plr->CastSpell( Plr, 38734, true );
-            break;
-        };
-    };
-
-	void Destroy()
-	{
-		delete this;
-	}
-};
-
-class SCRIPT_DECL MissingSkillNPC : public GossipScript{
-public:
-    void GossipHello(Object *pObject, Player *Plr, bool AutoSend);
-    void GossipSelectOption(Object *pObject, Player *Plr, uint32 Id, uint32 IntId, const char *Code);
-    void GossipEnd(Object *pObject, Player *Plr);
-	void Destroy(){ delete this; }
-};
-void MissingSkillNPC::GossipEnd(Object * pObject, Player* Plr){ GossipScript::GossipEnd(pObject, Plr); }
-void MissingSkillNPC::GossipHello(Object *pObject, Player *Plr, bool AutoSend){
-	GossipMenu *Menu;
-    objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
-				if (Plr->getClass() == 1) 
- { 
-Menu->AddItem(0, "What spells can warriors learn?", 1);
- } 
-				if (Plr->getClass() == 2)
- { 
-Menu->AddItem(0, "What spells can paladins learn?", 2);
- }
-				if (Plr->getClass() == 3)
- { 
-Menu->AddItem(0, "What spells can hunters learn?", 3);
- }
-				if (Plr->getClass() == 9)
- { 
-Menu->AddItem(0, "What spells can warlocks learn?", 4);
- }
-				if (Plr->getClass() == 11)
- { 
-Menu->AddItem(0, "What spells can druids learn?", 5);
- }
-				if (Plr->getClass() == 4) 
- { 
-Menu->AddItem(0, "What spells can rogues learn?", 6);
- } 
-				if (Plr->getClass() == 5) 
- { 
-Menu->AddItem(0, "What spells can priests learn?", 7);
- } 
-				if (Plr->getClass() == 7) 
- { 
-Menu->AddItem(0, "What spells can shamans learn?", 8);
- } 
-				if (Plr->getClass() == 8) 
- { 
-Menu->AddItem(0, "What spells can mages learn?", 9);
- } 
-
-
-Menu->AddItem(0, "Reset Talent Points", 98);
-
-    Menu->SendTo(Plr);
-}
-
-
-void MissingSkillNPC::GossipSelectOption(Object *pObject, Player *Plr, uint32 Id, uint32 IntId, const char *Code){
-	Creature * pCreature = (pObject->GetTypeId()==TYPEID_UNIT) ? ((Creature*)pObject) : NULL;
-	GossipMenu * Menu;
-	switch(IntId){
-	case 0:     // Return to start
-				GossipHello(pObject, Plr, true);
-            break;
-
-case 1:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(5, "Taunt", 10);
-Menu->AddItem(5, "Intercept", 13);
-Menu->AddItem(5, "Defensive Stance", 11);
-Menu->AddItem(5, "Beserker Stance", 12);
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-case 2:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(5, "Redemption", 22);
-Menu->AddItem(5, "Summon Warhorse", 20);
-Menu->AddItem(5, "Summon Charger", 21);
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-case 3:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(5, "Pet spells", 30);
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-case 4:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(5, "Pet Spells", 40);
-Menu->AddItem(5, "Summon Felstead", 41);
-Menu->AddItem(5, "Summon Dreadstead", 42);
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-case 5:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(5, "Bear Form", 54);
-Menu->AddItem(5, "Dire Bear Form", 51);
-Menu->AddItem(5, "Aquatic Form", 56);
-Menu->AddItem(5, "Normal Flight Form", 52);
-Menu->AddItem(5, "Epic Flight Form", 53); 
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-case 6:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-case 7:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-case 8:
-objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
-Menu->AddItem(0, "[Back]", 99);
-Menu->SendTo(Plr);
-break;
-
-        case 10:     // Warrior-Taunt
-			if(Plr->getLevel() >= 10)
-			{
-				Plr->addSpell(355);
-				Plr->BroadcastMessage("You have learned Taunt.");
-			}else{
-				Plr->BroadcastMessage("You must be level 10 to learn Taunt.");
-				}
-			break;
-
-	case 11:     // Warrior-Defensive Stance
-			if(Plr->getLevel() >= 10)
-			{
-				Plr->addSpell(71);
-				Plr->BroadcastMessage("You have learned Defensive Stance.");
-			}else{
-				Plr->BroadcastMessage("You must be level 10 to learn Defensive Stance.");
-				}
-			break;
-
-	case 12:     // Warrior-Beserker Stance
-			if(Plr->getLevel() >= 30)
-			{
-				Plr->addSpell(2458);
-				Plr->BroadcastMessage("You have learned Berseker Stance.");
-			}else{
-				Plr->BroadcastMessage("You must be level 30 to learn Berseker Stance.");
-				}
-			break;
-
-	case 13:     // Warrior-Intercept
-			if(Plr->getLevel() >= 10)
-			{
-				Plr->addSpell(25275);
-				Plr->BroadcastMessage("You have learned Intercept.");
-			}else{
-				Plr->BroadcastMessage("You must be level 10 to learn Intercept.");
-				}
-			break;
-
-        case 20:     // Paladin-Warhorse
-			if(Plr->getLevel() >= 40)
-			{
-                		Plr->addSpell(13819);
-            			Plr->BroadcastMessage("You have learned Summon Warhorse.");
-			}else{ 
-				Plr->BroadcastMessage("You must be level 40 to learn Summon Warhorse."); 
-				}
-			break;
-
-	case 21:     // Paladin-Charger
-			if(Plr->getLevel() >= 60)
-			{
-                		Plr->addSpell(34767);
-            			Plr->BroadcastMessage("You have learned Summon Charger.");
-			}else{ 
-				Plr->BroadcastMessage("You must be level 60 to learn Summon Charger."); 
-				}			
-			break;
-
-	case 22:     // Paladin-Redemption
-			if(Plr->getLevel() >= 10)
-			{
-                		Plr->addSpell(20773);
-            			Plr->BroadcastMessage("You have learned Redemption.");
-			}else{ 
-				Plr->BroadcastMessage("You must be level 10 to learn Redemption."); 
-				}			
-			break;
-        
-        case 30:     // Hunter-Pet Spells
-	        	if(Plr->getLevel() >= 10)
-	        	{
-				Plr->addSpell(1515);
-				Plr->addSpell(883);
-				Plr->addSpell(5149);
-				Plr->addSpell(982);
-				Plr->addSpell(6991);
-				Plr->BroadcastMessage("You have learned your Hunter Pet Spells.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You are below level 10.");
-				Plr->Gossip_Complete();
-				}
-            		break;
-
-	case 40:     // Warlock-Pet Spells
-	        	if(Plr->getLevel() >= 10)
-	        	{
-				Plr->addSpell(688);
-				Plr->addSpell(697);
-				Plr->addSpell(712);
-				Plr->addSpell(691);
-				Plr->BroadcastMessage("You have learned your Warlock Pet Spells.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You are below level 10.");
-				Plr->Gossip_Complete();
-			}
-			break;
-
-	case 41:     // Warlock-Felsteed
-	        	if(Plr->getLevel() >= 40)
-	        	{
-				Plr->addSpell(5784);
-				Plr->BroadcastMessage("You have learned Summon Felsteed.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You must be level 40 to learn Summon Felsteed.");
-				Plr->Gossip_Complete();
-			}
-			break;
-
-	case 42:     // Warlock-Dreadsteed
-	        	if(Plr->getLevel() >= 60)
-	        	{
-				Plr->addSpell(23161);
-				Plr->BroadcastMessage("You have learned Summon Dreadsteed.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You must be level 60 to learn Summon Dreadsteed.");
-				Plr->Gossip_Complete();
-			}
-            		break;
-
-	case 51:     // Druid-Dire Bear Form
-	        	if(Plr->getLevel() >= 30)
-	        	{
-				Plr->addSpell(9634);
-				Plr->BroadcastMessage("You have learned Dire Bear Form.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You must be level 30 to learn Dire Bear Form.");
-				Plr->Gossip_Complete();
-			}
-            		break;
-
-	case 52:     // Druid-Normal Flight Form
-	        	if(Plr->getLevel() >= 68)
-	        	{
-				Plr->addSpell(33943);
-				Plr->BroadcastMessage("You have learned Summon Normal Flight Form.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You must be level 68 to learn Normal Flight Form.");
-				Plr->Gossip_Complete();
-			}
-            		break;
-
-	case 53:     // Druid-Epic Flight Form
-	        	if(Plr->getLevel() >= 70)
-	        	{
-				Plr->addSpell(40120);
-				Plr->BroadcastMessage("You have learned Summon Epic Flight Form.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You must be level 60 to learn Epic Flight Form.");
-				Plr->Gossip_Complete();
-			}
-					break;
-	case 54:     // Druid-Bear form
-	        	if(Plr->getLevel() >= 10)
-	        	{
-				Plr->addSpell(6795);
-				Plr->BroadcastMessage("You have learned Bear Form.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You must be level 10 to learn Bear Form.");
-				Plr->Gossip_Complete();
-			}
-            		break;
-	case 56:     // Druid-Aquatic Form
-	        	if(Plr->getLevel() >= 20)
-	        	{
-				Plr->addSpell(6795);
-				Plr->BroadcastMessage("You have learned Aquatic Form.");
-				Plr->Gossip_Complete();
-			}else{
-				Plr->BroadcastMessage("You must be level 20 to learn Aquatic Form.");
-				Plr->Gossip_Complete();
-			}
-            		break;
-
-	case 98:     // Reset Talents  
-			{
-                                Plr->Reset_Talents();
-				Plr->BroadcastMessage("You have reset your talent points.");
-				Plr->Gossip_Complete();
-			}
-            		break;
-	case 99:    //Main Menu
-			objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
-				if (Plr->getClass() == 1) 
- { 
-Menu->AddItem(0, "What spells can warriors learn?", 1);
- } 
-				if (Plr->getClass() == 2)
- { 
-Menu->AddItem(0, "What spells can paladins learn?", 2);
- }
-				if (Plr->getClass() == 3)
- { 
-Menu->AddItem(0, "What spells can hunters learn?", 3);
- }
-				if (Plr->getClass() == 9)
- { 
-Menu->AddItem(0, "What spells can warlocks learn?", 4);
- }
-				if (Plr->getClass() == 11)
- { 
-Menu->AddItem(0, "What spells can druids learn?", 5);
- }
-				if (Plr->getClass() == 4) 
- { 
-Menu->AddItem(0, "What spells can rogues learn?", 6);
- } 
-				if (Plr->getClass() == 5) 
- { 
-Menu->AddItem(0, "What spells can priests learn?", 7);
- } 
-				if (Plr->getClass() == 7) 
- { 
-Menu->AddItem(0, "What spells can shamans learn?", 8);
- } 
-Menu->AddItem(0, "Reset Talent Points", 98);
-Menu->SendTo(Plr);
-break;
-
-			
-		}
-	}
-
-
-void SetupSkillNPC(ScriptMgr * mgr)
-{
-	GossipScript * gs = (GossipScript*) new SkillNPC();
-    mgr->register_gossip_script( 98777, gs);
-
-    GossipScript * bs = (GossipScript*) new BuffNPC();
-    mgr->register_gossip_script( 99998, bs);
-
-    mgr->register_gossip_script(98715, (GossipScript*) new MissingSkillNPC());
-}
+#include "StdAfx.h"
+#include "Setup.h"
+
+class SCRIPT_DECL SkillNPC : public GossipScript
+{
+	public:
+	void GossipHello(Object * pObject, Player* Plr, bool AutoSend);
+	void GossipSelectOption(Object * pObject, Player* Plr, uint32 Id, uint32 IntId, const char * Code);
+	void GossipEnd(Object * pObject, Player* Plr);
+	void Destroy()
+	{
+		delete this;
+	}
+};
+
+void SkillNPC::GossipHello(Object * pObject, Player* Plr, bool AutoSend)
+{
+	GossipMenu *Menu;
+    objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
+		       
+	if(!Plr->CombatStatus.IsInCombat())
+	{
+		Menu->AddItem(9, "Advance my weapon skills!", 1);
+		Menu->AddItem(5, "Goodbye!", 5);
+	}
+	else
+	{
+		Plr->BroadcastMessage("You are in combat!");
+	}
+
+	if(AutoSend)
+	Menu->SendTo(Plr);
+};
+
+
+void SkillNPC::GossipSelectOption(Object * pObject, Player* Plr, uint32 Id, uint32 IntId, const char * Code)
+    {
+	Creature * pCreature = (pObject->GetTypeId()==TYPEID_UNIT)?((Creature*)pObject):NULL;
+	if(pCreature==NULL)
+		return;
+
+        switch(IntId)
+        {
+        case 0:
+			GossipHello(pObject, Plr, true);
+			break;
+		case 5:
+		{
+			Plr->Gossip_Complete();//Ends Conversation
+		}
+			break;
+		case 1:
+		{
+			if (Plr->_HasSkillLine(43))
+			{
+				Plr->_AdvanceSkillLine(43, 400);
+			}//Swords
+
+			if (Plr->_HasSkillLine(44))
+			{
+				Plr->_AdvanceSkillLine(44, 400);
+			}//Axes
+
+			if (Plr->_HasSkillLine(45))
+			{
+				Plr->_AdvanceSkillLine(45, 400);
+			}//Bows
+
+			if (Plr->_HasSkillLine(46))
+			{
+				Plr->_AdvanceSkillLine(46, 400);
+			}//Guns
+
+			if (Plr->_HasSkillLine(54))
+			{
+				Plr->_AdvanceSkillLine(54, 400);
+			}//Maces
+
+			if (Plr->_HasSkillLine(95))
+			{
+				Plr->_AdvanceSkillLine(95, 400);
+			}//Defense
+
+			if (Plr->_HasSkillLine(136))
+			{
+				Plr->_AdvanceSkillLine(136, 400);
+			}//Staves
+
+			if (Plr->_HasSkillLine(160))
+			{
+				Plr->_AdvanceSkillLine(160, 400);
+			}//Two-Handed Swords
+
+			if (Plr->_HasSkillLine(162))
+				{Plr->_AdvanceSkillLine(162, 400);
+			}//Unarmed
+
+			if (Plr->_HasSkillLine(172))
+			{
+				Plr->_AdvanceSkillLine(172, 400);
+			}//Two-Handed Axes
+
+			if (Plr->_HasSkillLine(173))
+			{
+				Plr->_AdvanceSkillLine(173, 400);
+			}//Daggers
+
+			if (Plr->_HasSkillLine(176))
+			{
+				Plr->_AdvanceSkillLine(176, 400);
+			}//Thrown
+
+			if (Plr->_HasSkillLine(226))
+			{
+				Plr->_AdvanceSkillLine(226, 400);
+			}//Crossbows
+
+			if (Plr->_HasSkillLine(228))
+			{
+				Plr->_AdvanceSkillLine(228, 400);
+			}//Wands
+
+			if (Plr->_HasSkillLine(229))
+			{
+				Plr->_AdvanceSkillLine(229, 400);
+			}//Polearms
+
+			if (Plr->_HasSkillLine(473))
+			{
+				Plr->_AdvanceSkillLine(473, 400);
+			}//Fist Weapons - I am not sure if this is a skill that is like the others, I thought fist weapons contributed towards unarmed.
+			
+			if (Plr->_HasSkillLine(633))
+			{
+				Plr->_AdvanceSkillLine(633, 400);
+			}//Lockpicking - I know its not a weapon skill, but it's always a bitch to level.
+				
+			Plr->BroadcastMessage("You weapon skills have been advanced!");
+			Plr->Gossip_Complete();
+		}
+	}
+ }
+
+void SkillNPC::GossipEnd(Object * pObject, Player* Plr)
+{
+    GossipScript::GossipEnd(pObject, Plr);
+}
+
+class SCRIPT_DECL BuffNPC : public GossipScript
+{
+public:
+    void GossipHello(Object * pObject, Player* Plr, bool AutoSend)
+    { 
+        GossipMenu *Menu;
+        objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
+		       
+        if(!Plr->CombatStatus.IsInCombat())
+		{
+	        Menu->AddItem(0, "Master Magic buff!", 1);
+	        Menu->AddItem(0, "Master Melee buff!", 2);
+            Menu->AddItem(0, "Master Ranged buff!", 3);
+	    }
+	    else
+            Plr->BroadcastMessage("You are in combat!");
+					
+	    if(AutoSend)
+	        Menu->SendTo(Plr);
+    };
+
+    void GossipSelectOption(Object * pObject, Player* Plr, uint32 Id, uint32 IntId, const char * Code)
+    {
+        switch( IntId )
+        {
+        case 1:
+            Plr->CastSpell( Plr, 35912, true );
+            break;
+        case 2:
+            Plr->CastSpell( Plr, 35874, true );
+            break;
+        case 3:
+            Plr->CastSpell( Plr, 38734, true );
+            break;
+        };
+    };
+
+	void Destroy()
+	{
+		delete this;
+	}
+};
+
+class SCRIPT_DECL MissingSkillNPC : public GossipScript
+{
+	public:
+	
+	void GossipHello(Object *pObject, Player *Plr, bool AutoSend);
+	void GossipSelectOption(Object *pObject, Player *Plr, uint32 Id, uint32 IntId, const char *Code);
+	void GossipEnd(Object *pObject, Player *Plr);
+	
+	void Destroy()
+	{
+		delete this;
+	}
+};
+
+void MissingSkillNPC::GossipEnd(Object * pObject, Player* Plr)
+{
+	GossipScript::GossipEnd(pObject, Plr);
+}
+
+void MissingSkillNPC::GossipHello(Object *pObject, Player *Plr, bool AutoSend)
+{
+	GossipMenu *Menu;
+    objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
+
+	if (Plr->getClass() == 1) 
+	{ 
+		Menu->AddItem(0, "What spells can warriors learn?", 1);
+	} 
+	if (Plr->getClass() == 2)
+	{ 
+		Menu->AddItem(0, "What spells can paladins learn?", 2);
+	}
+	if (Plr->getClass() == 3)
+	{ 
+		Menu->AddItem(0, "What spells can hunters learn?", 3);
+	}
+	if (Plr->getClass() == 9)
+	{ 
+		Menu->AddItem(0, "What spells can warlocks learn?", 4);
+	}
+	if (Plr->getClass() == 11)
+	{ 
+		Menu->AddItem(0, "What spells can druids learn?", 5);
+	}
+	if (Plr->getClass() == 4) 
+	{ 
+		Menu->AddItem(0, "What spells can rogues learn?", 6);
+	} 
+	if (Plr->getClass() == 5) 
+	{ 
+		Menu->AddItem(0, "What spells can priests learn?", 7);
+	} 
+	if (Plr->getClass() == 7) 
+	{ 
+		Menu->AddItem(0, "What spells can shamans learn?", 8);
+	} 
+	if (Plr->getClass() == 8) 
+	{ 
+		Menu->AddItem(0, "What spells can mages learn?", 9);
+	} 
+
+	Menu->AddItem(0, "Reset Talent Points", 98);
+    Menu->SendTo(Plr);
+}
+
+
+void MissingSkillNPC::GossipSelectOption(Object *pObject, Player *Plr, uint32 Id, uint32 IntId, const char *Code)
+{
+	Creature * pCreature = (pObject->GetTypeId() == TYPEID_UNIT) ? ((Creature*)pObject) : NULL;
+	GossipMenu * Menu;
+	switch(IntId)
+	{
+	case 0:
+		GossipHello(pObject, Plr, true);
+		break;
+	case 1:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(5, "Taunt", 10);
+		Menu->AddItem(5, "Intercept", 13);
+		Menu->AddItem(5, "Defensive Stance", 11);
+		Menu->AddItem(5, "Beserker Stance", 12);
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+	case 2:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(5, "Redemption", 22);
+		Menu->AddItem(5, "Summon Warhorse", 20);
+		Menu->AddItem(5, "Summon Charger", 21);
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+	case 3:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(5, "Pet spells", 30);
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+	case 4:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(5, "Pet Spells", 40);
+		Menu->AddItem(5, "Summon Felstead", 41);
+		Menu->AddItem(5, "Summon Dreadstead", 42);
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+	case 5:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(5, "Bear Form", 54);
+		Menu->AddItem(5, "Dire Bear Form", 51);
+		Menu->AddItem(5, "Aquatic Form", 56);
+		Menu->AddItem(5, "Normal Flight Form", 52);
+		Menu->AddItem(5, "Epic Flight Form", 53); 
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+	case 6:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+	case 7:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+	case 8:
+	objmgr.CreateGossipMenuForPlayer(&Menu, pCreature->GetGUID(), 1, Plr);
+		Menu->AddItem(0, "[Back]", 99);
+		Menu->SendTo(Plr);
+		break;
+    case 10:     // Warrior-Taunt
+		if(Plr->getLevel() >= 10)
+		{
+			Plr->addSpell(355);
+			Plr->BroadcastMessage("You have learned Taunt.");
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 10 to learn Taunt.");
+		}
+		break;
+	case 11:     // Warrior-Defensive Stance
+		if(Plr->getLevel() >= 10)
+		{
+			Plr->addSpell(71);
+			Plr->BroadcastMessage("You have learned Defensive Stance.");
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 10 to learn Defensive Stance.");
+		}
+		break;
+	case 12:     // Warrior-Beserker Stance
+		if(Plr->getLevel() >= 30)
+		{
+			Plr->addSpell(2458);
+			Plr->BroadcastMessage("You have learned Berseker Stance.");
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 30 to learn Berseker Stance.");
+		}
+		break;
+	case 13:     // Warrior-Intercept
+		if(Plr->getLevel() >= 10)
+		{
+			Plr->addSpell(25275);
+			Plr->BroadcastMessage("You have learned Intercept.");
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 10 to learn Intercept.");
+		}
+		break;
+	case 20:     // Paladin-Warhorse
+		if(Plr->getLevel() >= 40)
+		{
+			Plr->addSpell(13819);
+           	Plr->BroadcastMessage("You have learned Summon Warhorse.");
+		}
+		else
+		{ 
+			Plr->BroadcastMessage("You must be level 40 to learn Summon Warhorse."); 
+		}
+		break;
+	case 21:     // Paladin-Charger
+		if(Plr->getLevel() >= 60)
+		{
+			Plr->addSpell(34767);
+           	Plr->BroadcastMessage("You have learned Summon Charger.");
+		}
+		else
+		{ 
+			Plr->BroadcastMessage("You must be level 60 to learn Summon Charger."); 
+		}			
+		break;
+	case 22:     // Paladin-Redemption
+		if(Plr->getLevel() >= 10)
+		{
+        	Plr->addSpell(20773);
+        	Plr->BroadcastMessage("You have learned Redemption.");
+		}
+		else
+		{ 
+			Plr->BroadcastMessage("You must be level 10 to learn Redemption."); 
+		}			
+		break;
+    case 30:     // Hunter-Pet Spells
+	    if(Plr->getLevel() >= 10)
+		{
+			Plr->addSpell(1515);
+			Plr->addSpell(883);
+			Plr->addSpell(5149);
+			Plr->addSpell(982);
+			Plr->addSpell(6991);
+			Plr->BroadcastMessage("You have learned your Hunter Pet Spells.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You are below level 10.");
+			Plr->Gossip_Complete();
+		}
+      	break;
+	case 40:     // Warlock-Pet Spells
+		if (Plr->getLevel() >= 10)
+		{
+			Plr->addSpell(688);
+			Plr->addSpell(697);
+			Plr->addSpell(712);
+			Plr->addSpell(691);
+			Plr->BroadcastMessage("You have learned your Warlock Pet Spells.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You are below level 10.");
+			Plr->Gossip_Complete();
+		}
+		break;
+	case 41:     // Warlock-Felsteed
+		if(Plr->getLevel() >= 40)
+		{
+			Plr->addSpell(5784);
+			Plr->BroadcastMessage("You have learned Summon Felsteed.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 40 to learn Summon Felsteed.");
+			Plr->Gossip_Complete();
+		}
+		break;
+	case 42:     // Warlock-Dreadsteed
+	    if(Plr->getLevel() >= 60)
+	    {
+			Plr->addSpell(23161);
+			Plr->BroadcastMessage("You have learned Summon Dreadsteed.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 60 to learn Summon Dreadsteed.");
+			Plr->Gossip_Complete();
+		}
+        break;
+	case 51:     // Druid-Dire Bear Form
+	    if(Plr->getLevel() >= 30)
+	    {
+			Plr->addSpell(9634);
+			Plr->BroadcastMessage("You have learned Dire Bear Form.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 30 to learn Dire Bear Form.");
+			Plr->Gossip_Complete();
+		}
+        break;
+	case 52:     // Druid-Normal Flight Form
+		if(Plr->getLevel() >= 68)
+	    {
+			Plr->addSpell(33943);
+			Plr->BroadcastMessage("You have learned Summon Normal Flight Form.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 68 to learn Normal Flight Form.");
+			Plr->Gossip_Complete();
+		}
+        break;
+	case 53:     // Druid-Epic Flight Form
+	    if(Plr->getLevel() >= 70)
+	    {
+			Plr->addSpell(40120);
+			Plr->BroadcastMessage("You have learned Summon Epic Flight Form.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 60 to learn Epic Flight Form.");
+			Plr->Gossip_Complete();
+		}
+		break;
+	case 54:     // Druid-Bear form
+	    if(Plr->getLevel() >= 10)
+		{
+			Plr->addSpell(6795);
+			Plr->BroadcastMessage("You have learned Bear Form.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 10 to learn Bear Form.");
+			Plr->Gossip_Complete();
+		}
+        break;
+	case 56:     // Druid-Aquatic Form
+	    if(Plr->getLevel() >= 20)
+	    {
+			Plr->addSpell(6795);
+			Plr->BroadcastMessage("You have learned Aquatic Form.");
+			Plr->Gossip_Complete();
+		}
+		else
+		{
+			Plr->BroadcastMessage("You must be level 20 to learn Aquatic Form.");
+			Plr->Gossip_Complete();
+		}
+        break;
+	case 98:     // Reset Talents  
+		{
+			Plr->Reset_Talents();
+			Plr->BroadcastMessage("You have reset your talent points.");
+			Plr->Gossip_Complete();
+		}
+        break;
+	case 99:    //Main Menu
+		objmgr.CreateGossipMenuForPlayer(&Menu, pObject->GetGUID(), 1, Plr);
+		
+		if (Plr->getClass() == 1) 
+		{ 
+			Menu->AddItem(0, "What spells can warriors learn?", 1);
+		} 
+						if (Plr->getClass() == 2)
+		{ 
+			Menu->AddItem(0, "What spells can paladins learn?", 2);
+		}
+						if (Plr->getClass() == 3)
+		{ 
+			Menu->AddItem(0, "What spells can hunters learn?", 3);
+		}
+						if (Plr->getClass() == 9)
+		{ 
+			Menu->AddItem(0, "What spells can warlocks learn?", 4);
+		}
+						if (Plr->getClass() == 11)
+		{ 
+			Menu->AddItem(0, "What spells can druids learn?", 5);
+		}
+						if (Plr->getClass() == 4) 
+		{ 
+			Menu->AddItem(0, "What spells can rogues learn?", 6);
+		} 
+						if (Plr->getClass() == 5) 
+		{ 
+			Menu->AddItem(0, "What spells can priests learn?", 7);
+		} 
+						if (Plr->getClass() == 7) 
+		{ 
+			Menu->AddItem(0, "What spells can shamans learn?", 8);
+		} 
+		
+		Menu->AddItem(0, "Reset Talent Points", 98);
+		Menu->SendTo(Plr);
+		break;
+	}
+}
+
+void SetupSkillNPC(ScriptMgr * mgr)
+{
+	GossipScript * gs = (GossipScript*) new SkillNPC();
+    mgr->register_gossip_script(98777, gs);
+
+    GossipScript * bs = (GossipScript*) new BuffNPC();
+    mgr->register_gossip_script(99998, bs);
+
+    mgr->register_gossip_script(98715, (GossipScript*) new MissingSkillNPC());
+}
\ No newline at end of file
-- 
1.9.5.msysgit.0

